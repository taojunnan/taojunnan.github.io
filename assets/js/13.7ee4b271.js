(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{545:function(t,s,a){"use strict";a.r(s);var e=a(10),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("众所周知，在"),a("code",[t._v("JS")]),t._v("中"),a("code",[t._v("0.1 + 0.2 == 0.3")]),t._v("结果是"),a("code",[t._v("false")]),t._v("，那是因为浮点数运算丢失精度造成的，"),a("code",[t._v("0.1 + 0.2")]),t._v("实际的运算结果可能是"),a("code",[t._v("0.30000000000000004")]),t._v("，所以和"),a("code",[t._v("0.3")]),t._v("相比较肯定是不等的。在一般情况下，我们要做浮点数的计算，要么通过一些类库，要么将等式两边同乘10或100，去除小数再计算。")]),t._v(" "),a("p",[t._v("但其实还有一种简单的方式可以比较，如下代码👇")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("abs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" Number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("EPSILON")]),t._v("\n")])])]),a("p",[a("code",[t._v("Number.EPSILON")]),t._v("是"),a("code",[t._v("JS")]),t._v("中"),a("code",[t._v("Number")]),t._v("类型最小的浮点数，在控制台输出它为"),a("code",[t._v("2.220446049250313e-16")]),t._v("，如果计算结果的绝对值小于或等于它，那么则认为它们相等。")]),t._v(" "),a("p",[t._v("算是一个小技巧吧，在日常开发中，如果是小部分的浮点数计算比较可以使用这种方式，如果涉及大量的精确的数值的情况，还是推荐使用成熟的类库。")])])}),[],!1,null,null,null);s.default=n.exports}}]);